import speech_recognition as sr
import pyttsx3

class AdvancedAI_OperatingSystem(AI_OperatingSystem):
    def __init__(self):
        super().__init__()
        self.voice_engine = pyttsx3.init()  # Initialisation de la synthèse vocale

    def speak(self, text):
        """Prononce une réponse à l'utilisateur."""
        self.voice_engine.say(text)
        self.voice_engine.runAndWait()

    def listen_command(self):
        """Écoute une commande vocale et la retourne en texte."""
        recognizer = sr.Recognizer()
        with sr.Microphone() as source:
            print("Parlez...")
            self.speak("Je vous écoute.")
            recognizer.adjust_for_ambient_noise(source)
            try:
                audio = recognizer.listen(source)
                command = recognizer.recognize_google(audio, language="fr-FR")
                print(f"Vous avez dit : {command}")
                return command
            except sr.UnknownValueError:
                self.speak("Désolé, je n'ai pas compris.")
                return None
            except sr.RequestError:
                self.speak("Erreur de connexion à Google Speech API.")
                return None

    def run(self):
        """Boucle principale d'interaction avec reconnaissance vocale."""
        self.speak("Système d'exploitation IA - Luméa Jarvis v0.2 prêt à fonctionner.")
        while True:
            print("\nAttente de commande (Texte ou Parole)...")
            command = input("Entrez une commande ou dites 'écoute' pour parler : ").strip()
            
            if command.lower() == "écoute":
                command = self.listen_command()

            if command:
                if command.lower() in ["quitter", "exit", "stop"]:
                    self.speak("Arrêt du système. À bientôt.")
                    print("Arrêt du système...")
                    break

                response = self.execute_command(command)
                print(f"> {response}")
                self.speak(response)

# Création d'une instance avancée du système d'exploitation IA
os_ai_advanced = AdvancedAI_OperatingSystem()
os_ai_advanced.run()
